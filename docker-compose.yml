version: "3.9"

services:
  nginx:
    build:
      context: ./webserver
    ports:
      - 8000:8000
    # restart: always
    depends_on:
      - koa
      - ruby
    environment:
      - PROXY_UPSTREAM=ruby
    volumes: # to mount bind the static files for Nginx to serve instead of Puma
      - ./webserver/proxy.conf:/etc/nginx/conf.d/default.conf
      - ./webserver/images:/usr/share/nginx/html
    # - ./sinatra/public:/usr/share/nginx/html

  koa:
    image: koa-img
    build:
      context: ./koa
    user: "node"
    env_file:
      - .env
    environment:
      - NODE_ENV=development
    ports:
      - 4000:3000
    expose:
      - 4000
    volumes:
      - ./koa:/node/koa
      - ./koa/node_modules:/node/node_modules
    command:
      ["node", "index.js"]
      # command: ./node_modules/pm2/bin/pm2-runtime index.js --no-daemon
    depends_on:
      pg:
        condition: service_healthy

  ruby:
    image: ruby-img
    build:
      context: ./sinatra
    env_file:
      - .env
    ports:
      - 9000:9292
    container_name: ruby
    # hostname: ruby
    expose:
      - 9000
    volumes:
      - ./sinatra:/app:ro
    depends_on:
      pg:
        condition: service_healthy
    #  stdin_open: true
    #  tty: true
    restart: on-failure
    #  command: ["./initializers/wait-for-pg.sh", "db", "rackup"]

  pg:
    image: pg-img
    build:
      context: .
    env_file:
      - .env
    ports:
      - 5000:5432
    container_name: pg
    volumes:
      - pg-vol:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -h pg "]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  pg-vol:
