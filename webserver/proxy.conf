############# CONFIG
# configure logs
log_format my_log ' "Request: $Request, Status: $status, Request_uri: $request_uri, Host: $host, Client_IP: $remote_addr, Proxy_IP: $proxy_add_x_forwarded_for, Proxy_Hostname: $proxy_host';

# mapping between file type and expires length for browser caching;
map $sent_http_content_type $expires {
    default                    off;
    text/html                  epoch;
    text/css                   max;
    application/javascript     max;
    ~image/                    max;
}
# Host: $upstream, Cache_Status: $upstream_cache_status  "';
  # check tail -f access.log
###################

upstream nodeapp {
  server koa:3000;
}

upstream sinatra {
  server ruby:9292;
}

server {
# when we visit localhost:8000, dc-nginx service has the mapping 8000->80
# so we reach port 80 on the host (localhost), binded to port 80 in the nginx container
# since cont-nginx is listening on port 80, it will then..
  listen 80;

  access_log /var/log/nginx/access.log my_log; #<- to watch logs with the output "my_log"

  

  # for the static files to be served by Nginx,
  # with a bind mount (we should COPY them with Dockerfile). They are in the Nginx container at : /usr/share/nginx/html;
  location ~ \.(png|webp|ico|svg|js)$ {
    root /usr/share/nginx/html;
    add_header Cache-Control "public, no-transform";
    expires   $expires; # read the mapping file/$expires
  }  


  # default "/" to node.js. In node, we redirect the route to "/node" where the action is
  location / {
    proxy_pass http://nodeapp$request_uri;

    proxy_pass_header Authorization;

    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header Host $http_host;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    
    # Following is necessary for Websocket support
    proxy_http_version 1.1;
    # proxy_ssl_server_name on;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "Upgrade";
  }

  location /ruby {
    proxy_pass http://sinatra$request_uri;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header Host $http_host; # or $host:$server_port; # to preserver href
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_pass_header Authorization;
    # Following is necessary for Websocket support
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "Upgrade";
  }
}

